apiVersion: batch/v1
kind: Job
metadata:
  name: es-service-user-setup
  namespace: greenearth-stage
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: setup
        image: curlimages/curl:8.4.0
        env:
        - name: ELASTIC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: greenearth-es-stage-es-elastic-user
              key: elastic
        - name: ES_SERVICE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: es-service-user-password
              key: password
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo "Waiting for Elasticsearch to be ready..."

          # Wait for Elasticsearch to be available
          until curl -k -s -u "elastic:$ELASTIC_PASSWORD" -o /dev/null -w "%{http_code}" https://greenearth-es-stage-es-http:9200/ | grep -q "200"; do
            echo "Waiting for Elasticsearch..."
            sleep 10
          done

          echo "Elasticsearch is ready! Creating es-service-user role and user..."

          # Create the es_service_role with specific privileges
          curl -k -X POST "https://greenearth-es-stage-es-http:9200/_security/role/es_service_role" \
            -u "elastic:$ELASTIC_PASSWORD" \
            -H "Content-Type: application/json" \
            -d '{
              "cluster": ["manage_index_templates", "monitor"],
              "indices": [
                {
                  "names": ["posts*"],
                  "privileges": ["create_index", "manage", "write", "read"]
                }
              ]
            }'

          echo ""
          echo "Role created successfully!"

          # Create the es-service-user with the role
          curl -k -X POST "https://greenearth-es-stage-es-http:9200/_security/user/es-service-user" \
            -u "elastic:$ELASTIC_PASSWORD" \
            -H "Content-Type: application/json" \
            -d "{
              \"password\": \"$ES_SERVICE_PASSWORD\",
              \"roles\": [\"es_service_role\"],
              \"full_name\": \"Elasticsearch Service User\",
              \"email\": \"es-service@greenearth.local\"
            }"

          echo ""
          echo "User created successfully!"

          # Create Kubernetes secret with the service user credentials
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: Secret
          metadata:
            name: es-service-user-secret
            namespace: greenearth-stage
          type: Opaque
          stringData:
            username: es-service-user
            password: $ES_SERVICE_PASSWORD
          EOF

          echo "Kubernetes secret created successfully!"
          echo "es-service-user setup completed!"
      serviceAccountName: es-service-user-setup-sa
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: es-service-user-setup-sa
  namespace: greenearth-stage
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: es-service-user-setup-role
  namespace: greenearth-stage
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["create", "get", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: es-service-user-setup-binding
  namespace: greenearth-stage
subjects:
- kind: ServiceAccount
  name: es-service-user-setup-sa
  namespace: greenearth-stage
roleRef:
  kind: Role
  name: es-service-user-setup-role
  apiGroup: rbac.authorization.k8s.io
